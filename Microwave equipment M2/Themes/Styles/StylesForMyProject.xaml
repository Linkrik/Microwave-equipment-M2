<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/">

    <!--#region BorderMain Style-->
    <Style x:Key="BorderMainStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBorderBackgroundColor}"/>
    </Style>
    <!--#endregion BorderMain Style-->

    <!--#region BorderGroup Style-->
    <Style x:Key="BorderGroupStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SecundaryBorderBackgroundColor}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    <!--#endregion BorderGroup Style-->

    <!--#region BorderHeder Style-->
    <Style x:Key="BorderHedarStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource TertiaryBorderBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushHederColor}"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Margin" Value="4"/>
    </Style>
    <!--#endregion BorderHeder Style-->

    <!--#region Text Heder -->
    <Style x:Key="TextHedarStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextHederColor}"/>
        <Setter Property="FontFamily" Value="Segoe UI Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    <!--#endregion Text Heder -->

    <!--#region Text Use-->
    <Style x:Key="TextUseStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextHederColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight SemiCondensed"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>
    <!--#endregion Text Use-->

    <!--#region Text Common-->
    <Style x:Key="TextCommonStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextHederColor}"/>
        <Setter Property="FontFamily" Value="Nirmala UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>
    <!--#endregion Text Common-->

    <!-- #region ToggleButton Style-->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundBorderNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBrushEllipseNotActiveColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="7"
                                    Height="14"
                                    Width="35"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>
                        <Ellipse x:Name="Ellipse"
                                     Height="20"
                                     Width="20"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Left"
                                     Fill="{DynamicResource ToggleButtonBackgroundEllipseNotActiveColor}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- EventTrigger Checked -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#C2D1FC" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="15 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- EventTrigger Unchecked -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#CECECE" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                                        Property="Fill"
                                        Value="{DynamicResource ToggleButtonBackgroundEllipseActiveColor}"/>
                            <Setter TargetName="Ellipse"
                                        Property="Stroke"
                                        Value="{DynamicResource ToggleButtonBrushEllipseActiveColor}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ellipse"
                                        Property="Fill"
                                        Value="{DynamicResource ToggleButtonBackgroundEllipseFalseEnabled}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill"
                                        Value="{DynamicResource ToggleButtonBackgroundEllipseMouseOver}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion ToggleButton Style-->

    <!--#region RadioButton Style -->
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonTextNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="FontFamily" Value="Nirmala UI"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <Border x:Name="rdBtnBorder" CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">

                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rdBtnBorder" Property="BorderBrush"
                                        Value="{DynamicResource RadioButtonBrushColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rdBtnBorder" Property="Background"
                                        Value="{DynamicResource RadioButtonClicColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rdBtnBorder" Property="Background"
                                        Value="{DynamicResource RadioButtonBackgroundColor}"/>
                            <Setter Property="Foreground"
                                        Value="{DynamicResource RadioButtonTextActiveInColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion RadioButton Style-->

    <!--#region TextBox DAC Style-->
    <Style x:Key="TextBoxDACStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxNumerecUpDownBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxNumerecUpDownTextNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxNumerecUpDownBrushColorNotActiveColor}"/>
        <Setter Property="BorderThickness" Value="2 2 0 2"/>
        <Setter Property="MaxLength" Value="12"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight SemiCondensed"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Margin" Value="4 4 0 4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border x:Name="textBorder" CornerRadius="5 0 0 5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <Grid Margin="{TemplateBinding Padding}">

                            <Viewbox>
                                <Border>
                                    <Grid >
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"/>

                                        <Label x:Name="WaterMarkerLabel"
                                           Content="{TemplateBinding Tag}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Visibility="Collapsed"
                                           Foreground="{DynamicResource PrimaryTextBoxGrayColor}"
                                           />
                                        <ContentPresenter Width="50"></ContentPresenter>
                                    </Grid>
                                </Border>
                            </Viewbox>
                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                               Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkerLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" 
                                        Value="{DynamicResource TextBoxNumerecUpDownBrushColorActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" 
                                        Value="{DynamicResource TextBoxNumerecUpDownBrushColorActiveColor}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TextBoxNumerecUpDownTextActiveInColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TextBox DAC Style-->

    <!--#region Up RepeatButton DAC Style-->
    <Style x:Key="UpRepeatButtonDACStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundNotActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource RepeatButtonNumerecUpDownIconNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonNumerecUpDownBrushNotActiveColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Padding"    Value="0"/>
        <Setter Property="Margin"     Value="0 4 4 0"/>
        <Setter Property="BorderThickness" Value="0 2 2 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="btnBorder" CornerRadius="0 5 0 0"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="5*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <fa5:ImageAwesome x:Name="icon"
                                              Grid.Column="1" Grid.Row="1"
                                              Icon="Solid_AngleUp"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"  
                                              Foreground="{TemplateBinding Foreground}"
                                              Margin="2"/>

                        </Grid>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundActiveColor}"/>
                            <Setter TargetName="icon" Property="Foreground"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownIconActiveInColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                    Value="{DynamicResource RepeatButtonNumerecUpDownBrushActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundClicColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Up RepeatButton DAC Style-->

    <!--#region Down RepeatButton DAC Style-->
    <Style x:Key="DownRepeatButtonDACStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundNotActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource RepeatButtonNumerecUpDownIconNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonNumerecUpDownBrushNotActiveColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Padding"    Value="0"/>
        <Setter Property="Margin"     Value="0 0 4 4"/>
        <Setter Property="BorderThickness" Value="0 0 2 2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="btnBorder" CornerRadius="0 0 5 0"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="5*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <fa5:ImageAwesome x:Name="icon"
                                              Grid.Column="1" Grid.Row="1"
                                              Icon="Solid_AngleDown"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"  
                                              Foreground="{TemplateBinding Foreground}"
                                              Margin="2"/>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundActiveColor}"/>
                            <Setter TargetName="icon" Property="Foreground"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownIconActiveInColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                    Value="{DynamicResource RepeatButtonNumerecUpDownBrushActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundClicColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Down RepeatButton DAC Style-->

    <!--#region TextBox Step DAC Style-->
    <Style x:Key="TextBoxStepDACStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxNumerecUpDownBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxNumerecUpDownTextNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxNumerecUpDownBrushColorNotActiveColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="MaxLength" Value="7"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight SemiCondensed"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border x:Name="textBorder" CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <Grid Margin="{TemplateBinding Padding}">

                            <Viewbox>
                                <Border>
                                    <Grid >
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"/>

                                        <Label x:Name="WaterMarkerLabel"
                                           Content="{TemplateBinding Tag}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Visibility="Collapsed"
                                           Foreground="{DynamicResource PrimaryTextBoxGrayColor}"
                                           
                                           />
                                        <ContentPresenter Width="35"></ContentPresenter>
                                    </Grid>
                                </Border>
                            </Viewbox>
                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                               Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkerLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" 
                                        Value="{DynamicResource TextBoxNumerecUpDownBrushColorActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" 
                                        Value="{DynamicResource TextBoxNumerecUpDownBrushColorActiveColor}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TextBoxNumerecUpDownTextActiveInColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TextBox Step DAC Style-->

    <!--#region Up RepeatButton ATT Style-->
    <Style x:Key="UpRepeatButtonATTStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundNotActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource RepeatButtonNumerecUpDownIconNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonNumerecUpDownBrushNotActiveColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Padding"    Value="0"/>
        <Setter Property="Margin"     Value="0 2 2 2"/>
        <Setter Property="BorderThickness" Value="0 2 2 2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="btnBorder" CornerRadius="0 5 5 0"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="5*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <fa5:ImageAwesome x:Name="icon"
                                              Grid.Column="1" Grid.Row="1"
                                              Icon="Solid_AngleUp"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"  
                                              Foreground="{TemplateBinding Foreground}"
                                              Margin="2"/>

                        </Grid>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundActiveColor}"/>
                            <Setter TargetName="icon" Property="Foreground"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownIconActiveInColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                    Value="{DynamicResource RepeatButtonNumerecUpDownBrushActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundClicColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Up RepeatButton ATT Style-->

    <!--#region Down RepeatButton ATT Style-->
    <Style x:Key="DownRepeatButtonATTStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundNotActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource RepeatButtonNumerecUpDownIconNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonNumerecUpDownBrushNotActiveColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Padding"    Value="0"/>
        <Setter Property="Margin"     Value="2 2 0 2"/>
        <Setter Property="BorderThickness" Value="2 2 0 2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="btnBorder" CornerRadius="5 0 0 5"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="5*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <fa5:ImageAwesome x:Name="icon"
                                              Grid.Column="1" Grid.Row="1"
                                              Icon="Solid_AngleDown"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"  
                                              Foreground="{TemplateBinding Foreground}"
                                              Margin="2"/>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundActiveColor}"/>
                            <Setter TargetName="icon" Property="Foreground"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownIconActiveInColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                    Value="{DynamicResource RepeatButtonNumerecUpDownBrushActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource RepeatButtonNumerecUpDownBackgroundClicColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Down RepeatButton ATT Style-->

    <!--#region TextBox Att Style-->
    <Style x:Key="TextBoxAttStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxNumerecUpDownBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxNumerecUpDownTextNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxNumerecUpDownBrushColorNotActiveColor}"/>
        <Setter Property="BorderThickness" Value="0 2"/>
        <Setter Property="MaxLength" Value="12"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight SemiCondensed"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Margin" Value="0 2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border x:Name="textBorder" CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <Grid Margin="{TemplateBinding Padding}">

                            <Viewbox>
                                <Border>
                                    <Grid >
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"/>

                                        <Label x:Name="WaterMarkerLabel"
                                           Content="{TemplateBinding Tag}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Visibility="Collapsed"
                                           Foreground="{DynamicResource PrimaryTextBoxGrayColor}"
                                           
                                           />
                                    </Grid>
                                </Border>
                            </Viewbox>
                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                               Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkerLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" 
                                        Value="{DynamicResource TextBoxNumerecUpDownBrushColorActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" 
                                        Value="{DynamicResource TextBoxNumerecUpDownBrushColorActiveColor}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TextBoxNumerecUpDownTextActiveInColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TextBox ATT Style-->

    <!--#region CheckBox ATT-->
    <Style x:Key="CheckBoxAtt" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundNotActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxTextNotActiveColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBrushNotActiveColor}"/>
        <Setter Property="FontFamily" Value="Nirmala UI"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="btnBorder" CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                
                                Width="20"
                                Height="20"
                                BorderThickness="2"
                                SnapsToDevicePixels="True">

                            <fa5:ImageAwesome x:Name="icon"
                                              Icon="Solid_Check"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"  
                                              Foreground="Transparent"
                                              Margin="2"/>
                        </Border>

                        <ContentPresenter Grid.Column="2" x:Name="ContentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxTextActiveColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush"
                                        Value="{DynamicResource CheckBoxBrushActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxTextActiveColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush"
                                        Value="{DynamicResource CheckBoxBrushActiveColor}"/>
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource CheckBoxBackgroundClicColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxTextActiveColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush"
                                        Value="{DynamicResource CheckBoxBrushActiveColor}"/>
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource CheckBoxBackgroundActiveColor}"/>
                            <Setter TargetName="icon" Property="Foreground"
                                        Value="{DynamicResource CheckBoxIconActiveInColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CheckBox ATT-->

    <!--#region -->
    <!--#endregion-->

    <!--#region -->
    <!--#endregion-->

    <!--#region TabItem Style -->
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TabItemTextNotActiveColor}"/>
        <Setter Property="FontFamily" Value="Segoe UI Black"/>
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Padding" Value="10 8"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="tabItemBorder"
                                    CornerRadius="5" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Margin="{TemplateBinding Margin}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="Header"
                                              Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="tabItemBorder" Property="BorderBrush" 
                                        Value="{DynamicResource TabItemBrushActiveColor}"/>
                        </Trigger>


                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="tabItemBorder" Property="BorderBrush" 
                                        Value="{DynamicResource TabItemBrushActiveColor}"/>
                            <Setter Property="Background"
                                        Value="{DynamicResource TabItemBackgroundActiveColor}"/>
                            <Setter Property="Foreground"
                                        Value="{DynamicResource TabItemTextActiveColor}"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TabControl Style-->
    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryBorderBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0"
                                      Background="Transparent"
                                      IsItemsHost="True"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        <Border Grid.Row="1" 
                                    CornerRadius="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="True"
                                                  Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--#endregion-->


</ResourceDictionary>